import Lulu.Widget.Display
import Lulu.Widget.MusicXML

open Lean ProofWidgets
open scoped ProofWidgets.Jsx

namespace Lulu

def test : MusicXML :=
  ‚ü®
    {
      partList :=
        ‚ü®
          #[
            {
              id := "P1",
              partName := "Music"
            }
          ]
        ‚ü©,
      part :=
        #[
          {
            id := "P1",
            elems :=
              #[
                {
                  number := 1,
                  attributes :=
                    {
                      divisions := 24,
                      elems := #[
                          .key (-4),
                          .time 8 8,
                          .clef ùÑû
                        ]
                    }
                  elems :=
                    #[
                      .tone {
                        pitch := ‚ü®.c, 0, 4‚ü©
                        duration := ‚ü®4‚ü©
                      },
                     .rest {
                        duration := ‚ü®16‚ü©
                      },
                     .tone {
                        pitch := ‚ü®.c, -1, 5‚ü©
                        duration := ‚ü®16‚ü©
                      },
                     .chord {
                        pitch := ‚ü®.e, 0, 4‚ü©
                        duration := ‚ü®16‚ü©
                      },
                     .chord {
                        pitch := ‚ü®.d, -2, 5‚ü©
                        duration := ‚ü®16‚ü©
                      },
                     .chord {
                        pitch := ‚ü®.g, 1, 5‚ü©
                        duration := ‚ü®16‚ü©
                      },
                     .chord {
                        pitch := ‚ü®.a, 0, 5‚ü©
                        duration := ‚ü®16‚ü©
                      },
                     .tone {
                        pitch := ‚ü®.a, 2, 3‚ü©
                        duration := ‚ü®16‚ü©
                        elems := #[
                          .tie "start",
                          .notations ‚ü®#[
                            .tied "start"
                          ]‚ü©
                        ]
                      },
                     .tone {
                        pitch := ‚ü®.a, 2, 3‚ü©
                        duration := ‚ü®32‚ü©
                        elems := #[
                          .tie "stop",
                          .notations ‚ü®#[
                            .tied "stop"
                          ]‚ü©
                        ]
                      }
                    ]
                }
              ]
          }
        ]
    }
  ‚ü©

#eval test

#html <SheetMusicDisplay musicXML={toString test} />

def tuplet : MusicXML :=
  ‚ü®
    {
      partList :=
        ‚ü®
          #[
            {
              id := "P1",
              partName := "Music"
            }
          ]
        ‚ü©,
      part :=
        #[
          {
            id := "P1",
            elems :=
              #[
                {
                  number := 1,
                  attributes :=
                    {
                      divisions := 6
                    }
                  elems :=
                    #[
                     .tone {
                        pitch := ‚ü®.a, -1, 4‚ü©
                        duration := ‚ü®1‚ü©
                        elems := #[
                          .type ùÖ°,
                          .timeModification {
                            actualNotes := 6
                            normalNotes := 4
                            normalType := ùÖ°
                           },
                          .beam {
                            number := 1,
                            value := "begin"
                          },
                          .notations ‚ü®#[
                            .tuplet {
                              number := 1
                              type := "start"
                             },
                            .slur {
                              number := 1
                              type := "start"
                            }
                          ]‚ü©
                        ]
                      },
                     .tone {
                        pitch := ‚ü®.e, 0, 5‚ü©
                        duration := ‚ü®1‚ü©
                        elems := #[
                          .type ùÖ°,
                          .timeModification {
                            actualNotes := 6
                            normalNotes := 4
                            normalType := ùÖ°
                           },
                          .beam {
                            number := 1,
                            value := "continue"
                          },
                          .tie "start",
                          .notations { elems := #[
                            .tied "start"
                          ] }
                        ]
                      },
                     .tone {
                        pitch := ‚ü®.e, 0, 5‚ü©
                        duration := ‚ü®1‚ü©
                        elems := #[
                          .type ùÖ°,
                          .timeModification {
                            actualNotes := 6
                            normalNotes := 4
                            normalType := ùÖ°
                           },
                          .beam {
                            number := 1,
                            value := "continue"
                          },
                          .tie "stop",
                          .notations { elems := #[
                            .tied "stop"
                          ] }
                        ]
                      },
                     .tone {
                        pitch := ‚ü®.f, -1, 4‚ü©
                        duration := ‚ü®1‚ü©
                        elems := #[
                          .type ùÖ°,
                          .timeModification {
                            actualNotes := 6
                            normalNotes := 4
                            normalType := ùÖ°
                           },
                          .beam {
                            number := 1,
                            value := "continue"
                          },
                          .notations ‚ü®#[
                          ]‚ü©
                        ]
                      },
                     .tone {
                        pitch := ‚ü®.d, 1, 4‚ü©
                        duration := ‚ü®1‚ü©
                        elems := #[
                          .type ùÖ°,
                          .timeModification {
                            actualNotes := 6
                            normalNotes := 4
                            normalType := ùÖ°
                           },
                          .beam {
                            number := 1,
                            value := "continue"
                          },
                          .notations ‚ü®#[
                          ]‚ü©
                        ]
                      },
                     .tone {
                        pitch := ‚ü®.c, 0, 5‚ü©
                        duration := ‚ü®1‚ü©
                        elems := #[
                          .type ùÖ°,
                          .timeModification {
                            actualNotes := 6
                            normalNotes := 4
                            normalType := ùÖ°
                           },
                          .beam {
                            number := 1,
                            value := "end"
                          },
                          .notations ‚ü®#[
                            .tuplet {
                              number := 1,
                              type := "stop"
                             },
                            .slur {
                              number := 1,
                              type := "stop"
                             }
                          ]‚ü©
                        ]
                      }
                    ]
                }
              ]
          }
        ]
    }
  ‚ü©

#eval tuplet

#html <SheetMusicDisplay musicXML={toString tuplet} />



end Lulu
